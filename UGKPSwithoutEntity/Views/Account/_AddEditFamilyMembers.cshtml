@model UGKPSwithoutEntity.Models.FamilyMember

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h3 id="ModalTitle">Add Member</h3>
        </div>
        @*FormMethod.Post, new { @id = "AddEditMemberForm" })*@ 
        <div class="modal-body">
            @using (Ajax.BeginForm("SaveFamilyMemberRecordInDB", "Account", new AjaxOptions() { HttpMethod="POST", UpdateTargetId = "ModalForAddEditMember", InsertionMode = InsertionMode.Replace, OnSuccess="SuccessInSavingFamilyMemberData" }, new { @id = "AddEditMemberForm" }))
            {
                @Html.AntiForgeryToken()
                <fieldset id="SubmitForm">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("MemberExists", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.FamilyMemberID, new { @id = "FamilyMemberID" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @id = "MemberFirstName" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @id = "MemberLastName" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-4">
                                @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control ", @id = "MemberAge"} })
                                @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Relation, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-4">
                                @Html.DropDownListFor(model => model.Relation, ViewBag.ListOfRelations as SelectList, "--Select Relation--", new { @class = "form-control", @id = "MemberRelation" })
                                @Html.ValidationMessageFor(model => model.Relation, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <input type="submit" value="Submit" class="btn btn-danger btn-block col-md-4" id="SaveMemberRecord" />
                        </div>

                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>

<script type="text/javascript">

    $(function () {
        $('a[data-toggle="tab"]').on('click', function (e) {
            window.localStorage.setItem('activeTab', $(e.target).attr('href'));
        });
        var activeTab = window.localStorage.getItem('activeTab');
        if (activeTab) {
            $('#myTab a[href="' + activeTab + '"]').tab('show');
        }
    });

    function SuccessInSavingFamilyMemberData(data) {
        if (data.success) {
            alert("Success!...");
            window.location.reload();
            $("#ModalForAddEditMember").modal("hide");
        }
    }



</script>
