@model UGKPSwithoutEntity.Models.Stock

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <button class="close" data-dismiss="modal">&times;</button>
            <h3 id="ModalTitle">Edit Stock</h3>
        </div>
        @*FormMethod.Post, new { @id = "AddEditMemberForm" })*@
        <div class="modal-body">
            @using (Ajax.BeginForm("UpdateStockRecordInDB", "Investments", new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "ModalForEditStock", InsertionMode = InsertionMode.Replace, OnSuccess = "SuccessInUpdatingStockData" }, new { @id = "EditStockForm" }))
            {
                @Html.AntiForgeryToken()
                <fieldset id="SubmitForm">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.SI_ID, new { @id = "SI_ID" })
                        @Html.HiddenFor(model => model.Ticker, new { @id = "Ticker" })
                        @Html.HiddenFor(model => model.Exchange, new { @id = "Exchange" })
                        @Html.HiddenFor(model => model.CompanyName, new { @id = "CompanyName" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price_Low, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Price_Low, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price_Low, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Price_High, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Price_High, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Price_High, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Day_Price_Low, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Day_Price_Low, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Day_Price_Low, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Day_Price_High, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.Day_Price_High, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Day_Price_High, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.P_E_Ratio, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.P_E_Ratio, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.P_E_Ratio, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.EPS, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.EPS, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.EPS, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DividendPerShare, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.DividendPerShare, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DividendPerShare, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DividendPercent, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.DividendPercent, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DividendPercent, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DividendYieldPercent, htmlAttributes: new { @class = "control-label col-md-5" })<span style="color:red">*</span>
                            <div class="col-md-5">
                                @Html.EditorFor(model => model.DividendYieldPercent, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DividendYieldPercent, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Sector, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-5">
                                @Html.TextAreaFor(model => model.Sector, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Sector, "", new { @class = "text-danger", @Value = "" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-5" })
                            <div class="col-md-5">
                                @Html.TextAreaFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger", @Value = "" })
                            </div>
                        </div>

                        <br />
                        <div class="form-group">
                            <input type="submit" value="Submit" class="btn btn-danger btn-block col-md-4" />
                        </div>

                    </div>
                </fieldset>
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    function SuccessInUpdatingStockData(data) {
        if (data.success) {
            alert("Success!...");
            window.location.reload();
            $("#ModalForEditStock").modal("hide");
        }
    }



</script>
