@using UGKPSwithoutEntity.Models
@model UGKPSwithoutEntity.Models.Stock

@{
    ViewBag.Title = "Investments";
}

<div class="container-fluid">
    <br />
    <h2>Investments Opportunities</h2>


    @if (ViewBag.Message != null)
    {
        <div class="alert alert-success">
            <strong>Sucess!</strong> @ViewBag.Message <br />
        </div>
    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div style="color:red" class="col-md-offset-2"> * Required Fields</div><br />
                <div class="form-group ">
                    @Html.LabelFor(model => model.Ticker, htmlAttributes: new { @class = "control-label col-md-2" }) <span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Ticker, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ticker, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ">
                    @Html.LabelFor(model => model.Exchange, htmlAttributes: new { @class = "control-label col-md-2" }) <span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.DropDownListFor(model => model.Exchange, new SelectList(Enum.GetValues(typeof(StockExchangeOptions))), "--Select Stock Exchange--", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Exchange, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price_Low, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Price_Low, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price_Low, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Price_High, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Price_High, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price_High, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Day_Price_Low, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Day_Price_Low, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Day_Price_Low, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Day_Price_High, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Day_Price_High, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Day_Price_High, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.P_E_Ratio, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.P_E_Ratio, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.P_E_Ratio, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EPS, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.EPS, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.EPS, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DividendPerShare, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.DividendPerShare, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DividendPerShare, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DividendPercent, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.DividendPercent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DividendPercent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DividendYieldPercent, htmlAttributes: new { @class = "control-label col-md-2" })<span style="color:red">*</span>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.DividendYieldPercent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DividendYieldPercent, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Sector, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.TextAreaFor(model => model.Sector, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Sector, "", new { @class = "text-danger", @Value = "" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger", @Value = "" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-2">
                        <input type="submit" value="Submit" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    }

</div>
@section Scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
}